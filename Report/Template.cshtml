@model TestReporter.SpecFlow.Tool.Models.Report.ReportDetails;
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="@Model.MaterialCssLibraryPath" />
    <link rel="stylesheet" href="@Model.MaterialIcons" />
    <link rel="icon" href="@Model.SpecFlowIconPath" />
    <title>Step Definition Reporter</title>
    <style>
      ::selection {
        background: #e0f7fa;
      }

      .collection-item-text {
        font-size: 14px;
      }

      .collapsible-header {
        font-size: 16px;
      }

      .collapsible .collapsible-body {
        padding: 5px;
      }

      .header {
        font-weight: 300;
      }

      .collapsible-body {
        background-color: #fff;
      }

      .unused-step {
        cursor: default;
      }

      .progress {
          background-color: #acec;
      }

      .progress .indeterminate {
          background-color: #00bcd4;
      }

      @@media only screen and (min-width: 993px) {
        .container {
          width: 95%;
        }
      }
    </style>
    <script src="@Model.MaterialJsLibraryPath"></script>
  </head>
  <body class="grey lighten-3">
    <div class="progress">
      <div class="indeterminate"></div>
    </div>
    <div class="container">
      <div class="row">
        <span class="col s12">
          <h3 class="header blue-text blue-grey-text darken-4">
            Step Definition Report
            <i class="material-icons">remove</i>
            <span class="hide-on-med-and-down">@Model.ProjectName</span>
            <span class="hide-on-large-only truncate">@Model.ProjectName</span>
          </h3>
          <blockquote>
            Generated by SpecFlow at @Model.GeneratedDateTime 
            (see <a target="_blank" href="http://www.specflow.org/">http://www.specflow.org/</a>).
          </blockquote>
          <span class="badge blue white-text text-lighten-1" style="float: left; margin-left: 0px;" data-badge-caption="steps">
            @Model.TotalNumberOfSteps
          </span>
          @if (Model.TotalNumberOfUnusedSteps != 0)
          {
            <span class="badge red white-text text-lighten-1" style="float: left;" data-badge-caption="unused">
              @Model.TotalNumberOfUnusedSteps
            </span>
          }
        </span>
      </div>
      <div class="row">
        <div class="col-12">
          @foreach (var groupedSteps in Model.Results) 
          {
            <div>
              <h3 class="header red-text darken-2">@groupedSteps.Type</h3>
              <ul class="collapsible">
                @foreach (var stepInfo in groupedSteps.Attributes) 
                { 
                  if (stepInfo.NumberOfCalls == 0) 
                  {
                    <div class="collapsible-header hoverable red lighten-1 white-text text-lighten-1 unused-step">
                      <i class="material-icons">close</i>
                      @stepInfo.Value
                    </div>
                  } 
                  else 
                  {
                    <li>
                      <div class="collapsible-header hoverable">
                        <i class="material-icons">done_all</i>
                        @stepInfo.Value
                        <span class="badge teal white-text text-lighten-1" data-badge-caption="total">
                          @stepInfo.NumberOfCalls
                        </span>
                      </div>
                      <div class="collapsible-body" style="padding: 0px;">
                        <ul class="collection">
                          @foreach (var generatedStepDefinition in stepInfo.GeneratedStepDefinitions) 
                          {
                            <li class="collection-item">
                              <span class="hide-on-small-only collection-item-text grey-text text-darken-4">
                                @generatedStepDefinition.StepName
                              </span>
                              <span class="hide-on-med-and-up truncate collection-item-text grey-text text-darken-4">
                               @generatedStepDefinition.StepName
                              </span>
                              <i class="material-icons hide-on-med-and-down" style="vertical-align: top">chevron_right</i>
                              <span class="collection-item-text grey-text hide-on-med-and-down">
                                @generatedStepDefinition.FeatureFileName
                              </span>
                              <span class="hide-on-med-and-down secondary-content badge light-blue accent-3 white-text text-lighten-1">
                                @generatedStepDefinition.NumberCallsInFeatureFile
                              </span>
                            </li>
                          }
                        </ul>
                      </div>
                    </li>
                  } 
                }
              </ul>
            </div>
          }
        </div>
      </div>
    </div>
    <script>
      M.AutoInit();
      document.addEventListener("DOMContentLoaded", () => {
        const loaders = document.querySelectorAll('.progress');
        if (loaders && loaders.length && loaders.length === 1) {
          const progressbar = loaders[0];
          progressbar.parentNode.removeChild(progressbar);
        }
      });
    </script>
  </body>
</html>